<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <!-- <DefaultItemExcludes>$(DefaultItemExcludes);node_modules\**</DefaultItemExcludes>  it is not used now. -->
    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <!-- File with modifytime of last successful npm install -->
    <NpmInstallStampFile>node_modules/.install-stamp</NpmInstallStampFile>
    <CodeAnalysisRuleSet>..\..\StyleCop.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.435">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <AdditionalFiles Include="..\..\stylecop.json" Link="stylecop.json" />
    <ProjectReference Include="..\..\Fin\MemDb\Fin.MemDb.csproj" />
    <ProjectReference Include="..\..\Fin\BrokerCommon\Fin.BrokerCommon.csproj" />
    <ProjectReference Include="..\..\Common\SqCommon\SqCommon.csproj" />
    <ProjectReference Include="..\..\Common\DbCommon\DbCommon.csproj" />
    <ProjectReference Include="..\..\Common\MathCommon\MathCommon.csproj" />
    <None Update="NLog.config" CopyToOutputDirectory="PreserveNewest" />
    <PackageReference Include="System.ServiceModel.Syndication" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="8.0.2" />
    <PackageReference Include="NLog.Web.AspNetCore" Version="5.0.0" />
    <PackageReference Include="Npgsql" Version="8.0.3" />
    <PackageReference Include="StackExchange.Redis" Version="2.6.80" />
    <PackageReference Include="Azure.AI.OpenAI" Version="1.0.0-beta.8" />
  </ItemGroup>
  <ItemGroup>
    <!-- The Content item list contains files that are published in addition to the build outputs. 
    By default, files matching the patterns wwwroot\**, **\*.config, and **\*.json are included in the Content item list.
     https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/visual-studio-publish-profiles?view=aspnetcore-3.1 -->
    <!-- Don't publish the Angular source json files, but do show them in the project files list in VsCode. So, don't remove it from <None>, just remove it from <Content> -->
    <Content Remove="projects\**" />
    <!-- <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" /> -->
  </ItemGroup>
  <!-- "If there are no initial targets, default targets, or command-line targets, then MSBuild runs the first target it encounters in the project file or any imported project files." 
  https://docs.microsoft.com/en-us/visualstudio/msbuild/target-build-order -->
  <!-- The "dotnet build" command is equivalent to "dotnet msbuild -restore -target:Build". The "dotnet msbuild" gives you more control.  -->
  <Target Name="PublishSqCoreWeb" AfterTargets="ComputeFilesToPublish" Condition=" '$(Configuration)' == 'Release'">
    <Message Importance="high" Text="SqBuild:PublishSqCoreWeb...(runs after Build+ComputeFilesToPublish targets finished, but before Publish). Do nothing." />
  </Target>
  <!-- https://stackoverflow.com/questions/35435041/run-npm-install-only-when-needed-and-or-partially -->
  <Target Name="NpmInstall" BeforeTargets="BeforeBuild" Inputs="package.json" Outputs="$(NpmInstallStampFile)">
    <Message Importance="high" Text="SqBuild: Restoring npm packages..." />
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Exec Command="npm install" />
    <Touch Files="$(NpmInstallStampFile)" AlwaysCreate="true" />
  </Target>
</Project>